[{"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\index.js":"1","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\App.js":"2","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Jumbotron\\Jumbotron.js":"3","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Jumbotron\\Style.js":"4","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\GlobalStyles.js":"5","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Home.js":"6","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\containers\\JumbotronContainer.js":"7","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\containers\\FooterContainer.js":"8","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Footer\\Footer.js":"9","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Footer\\FooterStyle.js":"10","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\FooterContainer.js":"11","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\JumbotronContainer.js":"12","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\FaqsContainer.js":"13","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Faqs\\Faqs.js":"14","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Faqs\\FaqStyle.js":"15","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\OtpFormContainer.js":"16","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\OtpForm\\OtpForm.js":"17","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\OtpForm\\OtpFormStyle.js":"18","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Signin.js":"19","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Signup.js":"20","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Browse.js":"21","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\HeaderContainer.js":"22","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Header\\Header.js":"23","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Header\\HeaderStyle.js":"24","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\HeaderFeature\\HeaderFeature.js":"25","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\HeaderFeature\\HeaderFeatureStyle.js":"26","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\firebase.js":"27","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\mockData.js":"28","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Form\\Form.js":"29","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Form\\FormStyle.js":"30","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\ContextApi\\StateProvider.js":"31","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\ContextApi\\reducer.js":"32","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\utils\\selectionFilter.js":"33","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\BrowseContainer.js":"34","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\ProfileContainer.js":"35","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Profile\\Profile.js":"36","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Profile\\ProfileStyle.js":"37","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\hooks\\useContent.js":"38","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Loading\\Loading.js":"39","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Loading\\LoadingStyle.js":"40","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Card\\Card.js":"41","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Player\\Player.js":"42","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Card\\CardStyle.js":"43","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Player\\PlayerStyle.js":"44"},{"size":467,"mtime":1611515473320,"results":"45","hashOfConfig":"46"},{"size":1341,"mtime":1611581734287,"results":"47","hashOfConfig":"46"},{"size":924,"mtime":1611494706606,"results":"48","hashOfConfig":"46"},{"size":1338,"mtime":1611489783966,"results":"49","hashOfConfig":"46"},{"size":430,"mtime":1611487233454,"results":"50","hashOfConfig":"46"},{"size":1191,"mtime":1611504884431,"results":"51","hashOfConfig":"46"},{"size":813,"mtime":1611494729615,"results":"52","hashOfConfig":"53"},{"size":1530,"mtime":1611493746520,"results":"54","hashOfConfig":"53"},{"size":967,"mtime":1611493718850,"results":"55","hashOfConfig":"46"},{"size":1152,"mtime":1611493203948,"results":"56","hashOfConfig":"46"},{"size":1530,"mtime":1611493746520,"results":"57","hashOfConfig":"46"},{"size":813,"mtime":1611494729615,"results":"58","hashOfConfig":"46"},{"size":669,"mtime":1611499414974,"results":"59","hashOfConfig":"46"},{"size":1587,"mtime":1611497249635,"results":"60","hashOfConfig":"46"},{"size":2091,"mtime":1611498745742,"results":"61","hashOfConfig":"46"},{"size":532,"mtime":1611502527200,"results":"62","hashOfConfig":"46"},{"size":743,"mtime":1611499836941,"results":"63","hashOfConfig":"46"},{"size":1396,"mtime":1611503326315,"results":"64","hashOfConfig":"46"},{"size":2011,"mtime":1611513914435,"results":"65","hashOfConfig":"46"},{"size":2400,"mtime":1611514360480,"results":"66","hashOfConfig":"46"},{"size":437,"mtime":1611566829393,"results":"67","hashOfConfig":"46"},{"size":1134,"mtime":1611582631869,"results":"68","hashOfConfig":"46"},{"size":2804,"mtime":1611582664387,"results":"69","hashOfConfig":"46"},{"size":5152,"mtime":1611582884098,"results":"70","hashOfConfig":"46"},{"size":491,"mtime":1611504873152,"results":"71","hashOfConfig":"46"},{"size":593,"mtime":1611503261933,"results":"72","hashOfConfig":"46"},{"size":632,"mtime":1611509529213,"results":"73","hashOfConfig":"46"},{"size":19450,"mtime":1611509580808,"results":"74","hashOfConfig":"53"},{"size":1245,"mtime":1611513677883,"results":"75","hashOfConfig":"46"},{"size":1789,"mtime":1611513352696,"results":"76","hashOfConfig":"46"},{"size":537,"mtime":1611524416153,"results":"77","hashOfConfig":"46"},{"size":282,"mtime":1611524371691,"results":"78","hashOfConfig":"46"},{"size":1274,"mtime":1611525698433,"results":"79","hashOfConfig":"46"},{"size":5580,"mtime":1611582934514,"results":"80","hashOfConfig":"46"},{"size":1008,"mtime":1611582771245,"results":"81","hashOfConfig":"46"},{"size":847,"mtime":1611582006761,"results":"82","hashOfConfig":"46"},{"size":1133,"mtime":1611567476705,"results":"83","hashOfConfig":"46"},{"size":464,"mtime":1611525706129,"results":"84","hashOfConfig":"46"},{"size":424,"mtime":1611568184494,"results":"85","hashOfConfig":"46"},{"size":1560,"mtime":1611568406968,"results":"86","hashOfConfig":"46"},{"size":2986,"mtime":1611578819909,"results":"87","hashOfConfig":"46"},{"size":1353,"mtime":1611577509715,"results":"88","hashOfConfig":"46"},{"size":3860,"mtime":1611579382978,"results":"89","hashOfConfig":"46"},{"size":1607,"mtime":1611579014551,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"xsgbu3",{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r0gisa",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"93"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\index.js",[],["185","186"],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\App.js",["187","188"],"import React, { useEffect } from \"react\";\nimport FooterContainer from \"./Containers/FooterContainer\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useStateValue } from \"./ContextApi/StateProvider\";\nimport { auth } from \"./firebase\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport Browse from \"./pages/Browse\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  // Create a listener to track who is singin/signup\n  useEffect(() => {\n    // listener\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        // the user just logged in / the was logged in\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/signin\">\n          <Signin />\n        </Route>\n        <Route path=\"/browse\">\n          {\" \"}\n          <Browse />{\" \"}\n        </Route>\n      </Switch>\n      <FooterContainer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Jumbotron\\Jumbotron.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Jumbotron\\Style.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\GlobalStyles.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Home.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\containers\\JumbotronContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\containers\\FooterContainer.js",[],["189","190"],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Footer\\FooterStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\FooterContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\JumbotronContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\FaqsContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Faqs\\Faqs.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Faqs\\FaqStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\OtpFormContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\OtpForm\\OtpForm.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\OtpForm\\OtpFormStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Signin.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Signup.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\pages\\Browse.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\HeaderContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Header\\HeaderStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\HeaderFeature\\HeaderFeature.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\HeaderFeature\\HeaderFeatureStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\firebase.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\mockData.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Form\\Form.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Form\\FormStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\ContextApi\\StateProvider.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\ContextApi\\reducer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\utils\\selectionFilter.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\BrowseContainer.js",["191","192","193"],"import React, { useEffect, useState } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\nimport Header, {\r\n  HeaderButtonLink,\r\n  HeaderDropdown,\r\n  HeaderFeature,\r\n  HeaderFeatureCallOut,\r\n  HeaderFrame,\r\n  HeaderGroup,\r\n  HeaderLogo,\r\n  HeaderPicture,\r\n  HeaderPlayButton,\r\n  HeaderProfile,\r\n  HeaderSearch,\r\n  HeaderText,\r\n  HeaderTextLink,\r\n} from \"../Components/Header/Header\";\r\nimport Logo from \"../logo.svg\";\r\nimport Loading, { LoadingReleaseBody } from \"../Components/Loading/Loading\";\r\nimport { useStateValue } from \"../ContextApi/StateProvider\";\r\nimport SelectProfileContainer from \"./ProfileContainer\";\r\nimport { auth } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card, {\r\n  CardEntities,\r\n  CardFeature,\r\n  CardGroup,\r\n  CardImage,\r\n  CardItem,\r\n  CardMeta,\r\n  CardSubTitle,\r\n  CardText,\r\n  CardTitle,\r\n} from \"../Components/Card/Card\";\r\nimport Player, { PlayerButton, PlayerVideo } from \"../Components/Player/Player\";\r\n\r\nconst BrowseContainer = ({ slides }) => {\r\n  const history = useHistory();\r\n  const [{ user }] = useStateValue();\r\n  const [profile, setProfile] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [category, setCategory] = useState(\"series\");\r\n  const [slideRows, setSlideRows] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, [profile.displayName]);\r\n\r\n  useEffect(() => {\r\n    setSlideRows(slides[category]);\r\n  }, [slides, category]);\r\n\r\n  useEffect(() => {\r\n    const fuse = new Fuse(slideRows, {\r\n      keys: [\"data.description\", \"data.title\", \"data.genre\"],\r\n    });\r\n    const results = fuse.search(searchTerm).map(({ item }) => item);\r\n\r\n    if (slideRows.length > 0 && searchTerm.length > 1 && results.length > 0) {\r\n      setSlideRows(results);\r\n    } else {\r\n      setSlideRows(slides[category]);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          {loading ? <Loading src={user.photoURL} /> : <LoadingReleaseBody />}\r\n          <Header src=\"joker1\">\r\n            <HeaderFrame>\r\n              <HeaderGroup>\r\n                <HeaderLogo to=\"/\" src={Logo} alt=\"Netflix\" />\r\n                <HeaderTextLink\r\n                  active={category === \"series\" ? \"true\" : \"false\"}\r\n                  onClick={() => setCategory(\"series\")}\r\n                >\r\n                  Series\r\n                </HeaderTextLink>\r\n                <HeaderTextLink\r\n                  active={category === \"films\" ? \"true\" : \"false\"}\r\n                  onClick={() => setCategory(\"films\")}\r\n                >\r\n                  Films\r\n                </HeaderTextLink>\r\n              </HeaderGroup>\r\n              <HeaderGroup>\r\n                <HeaderSearch\r\n                  searchTerm={searchTerm}\r\n                  setSearchTerm={setSearchTerm}\r\n                />\r\n                <HeaderProfile>\r\n                  <HeaderPicture src={user.photoURL} />\r\n                  <HeaderDropdown>\r\n                    <HeaderGroup>\r\n                      <HeaderPicture src={user.photoURL} />\r\n                      <HeaderTextLink>{user.displayName}</HeaderTextLink>\r\n                    </HeaderGroup>\r\n                    <HeaderGroup>\r\n                      <HeaderTextLink\r\n                        onClick={() =>\r\n                          auth.signOut().then(() => history.push(\"/\"))\r\n                        }\r\n                      >\r\n                        Sign out\r\n                      </HeaderTextLink>\r\n                    </HeaderGroup>\r\n                  </HeaderDropdown>\r\n                </HeaderProfile>\r\n              </HeaderGroup>\r\n            </HeaderFrame>\r\n            <HeaderFeature>\r\n              <HeaderFeatureCallOut>Watch Joker Now</HeaderFeatureCallOut>\r\n\r\n              <HeaderText>\r\n                Forever alone in a crowd, failed comedian Arthur Fleck seeks\r\n                connection as he walks the streets of Gotham City. Arthur wears\r\n                two masks -- the one he paints for his day job as a clown, and\r\n                the guise he projects in a futile attempt to feel like he's part\r\n                of the world around him.\r\n              </HeaderText>\r\n              <HeaderPlayButton>Play</HeaderPlayButton>\r\n            </HeaderFeature>\r\n          </Header>\r\n          <CardGroup>\r\n            {slideRows.map((slideItem) => (\r\n              <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\r\n                <CardTitle>{slideItem.title}</CardTitle>\r\n                <CardEntities>\r\n                  {slideItem.data.map((item) => (\r\n                    <CardItem key={item.docId} item={item}>\r\n                      <CardImage\r\n                        src={`/images/${category}/${item.genre}/${item.slug}/small.jpg`}\r\n                      />\r\n                      <CardMeta>\r\n                        <CardSubTitle>{item.title}</CardSubTitle>\r\n                        <CardText>{item.description}</CardText>\r\n                      </CardMeta>\r\n                    </CardItem>\r\n                  ))}\r\n                </CardEntities>\r\n                <CardFeature category={category}>\r\n                  <Player>\r\n                    <PlayerButton />\r\n                    <PlayerVideo src=\"/videos/video.mp4\" />\r\n                  </Player>\r\n                </CardFeature>\r\n              </Card>\r\n            ))}\r\n          </CardGroup>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <SelectProfileContainer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrowseContainer;\r\n","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Containers\\ProfileContainer.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Profile\\Profile.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Profile\\ProfileStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\hooks\\useContent.js",["194"],"import { useEffect, useState } from \"react\";\r\nimport db from \"../firebase\";\r\n\r\nconst useContent = (targetData) => {\r\n  const [content, setContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(targetData).onSnapshot((snapshot) =>\r\n      setContent(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  return { [targetData]: content };\r\n};\r\n\r\nexport default useContent;\r\n","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Loading\\LoadingStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Card\\Card.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Player\\Player.js",["195"],"import React, { useState, useContext, createContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Container, Button, Overlay, Inner, Close } from \"./PlayerStyle\";\r\n\r\nexport const PlayerContext = createContext();\r\n\r\nconst Player = ({ children, ...restProps }) => {\r\n  const [showPlayer, setShowPlayer] = useState(false);\r\n\r\n  return (\r\n    <PlayerContext.Provider value={{ showPlayer, setShowPlayer }}>\r\n      <Container {...restProps}>{children}</Container>\r\n    </PlayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const PlayerVideo = ({ src, ...restProps }) => {\r\n  const { showPlayer, setShowPlayer } = useContext(PlayerContext);\r\n\r\n  return showPlayer\r\n    ? ReactDOM.createPortal(\r\n        <Overlay data-testid=\"player\">\r\n          <Inner>\r\n            <video id=\"netflix-player\" autoplay=\"true\" controls>\r\n              <source src={src} type=\"video/mp4\" />\r\n            </video>\r\n            <Close onClick={() => setShowPlayer(false)} />\r\n          </Inner>\r\n        </Overlay>,\r\n        document.body\r\n      )\r\n    : null;\r\n};\r\n\r\nexport const PlayerButton = ({ ...restProps }) => {\r\n  const { showPlayer, setShowPlayer } = useContext(PlayerContext);\r\n\r\n  return (\r\n    <Button\r\n      onClick={() => setShowPlayer((showPlayer) => !showPlayer)}\r\n      {...restProps}\r\n    >\r\n      Play\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Card\\CardStyle.js",[],"C:\\Users\\Hp\\Desktop\\react projects\\netflix-clone\\netflix-clone\\src\\Components\\Player\\PlayerStyle.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":12,"column":12,"nodeType":"202","messageId":"203","endLine":12,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":32,"column":6,"nodeType":"206","endLine":32,"endColumn":8,"suggestions":"207"},{"ruleId":"196","replacedBy":"208"},{"ruleId":"198","replacedBy":"209"},{"ruleId":"200","severity":1,"message":"210","line":4,"column":3,"nodeType":"202","messageId":"203","endLine":4,"endColumn":19},{"ruleId":"200","severity":1,"message":"211","line":40,"column":19,"nodeType":"202","messageId":"203","endLine":40,"endColumn":29},{"ruleId":"204","severity":1,"message":"212","line":67,"column":6,"nodeType":"206","endLine":67,"endColumn":18,"suggestions":"213"},{"ruleId":"204","severity":1,"message":"214","line":16,"column":6,"nodeType":"206","endLine":16,"endColumn":8,"suggestions":"215"},{"ruleId":"200","severity":1,"message":"216","line":36,"column":11,"nodeType":"202","messageId":"203","endLine":36,"endColumn":21},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["219"],["217"],["218"],"'HeaderButtonLink' is defined but never used.","'setProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'category', 'slideRows', and 'slides'. Either include them or remove the dependency array. If 'setSlideRows' needs the current value of 'slides', you can also switch to useReducer instead of useState and read 'slides' in the reducer.",["220"],"React Hook useEffect has a missing dependency: 'targetData'. Either include it or remove the dependency array.",["221"],"'showPlayer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [dispatch]",{"range":"228","text":"229"},"Update the dependencies array to be: [category, searchTerm, slideRows, slides]",{"range":"230","text":"231"},"Update the dependencies array to be: [targetData]",{"range":"232","text":"233"},[917,919],"[dispatch]",[1916,1928],"[category, searchTerm, slideRows, slides]",[385,387],"[targetData]"]